{
	"info": {
		"_postman_id": "de6c87e1-7f6f-4792-8bfd-3610e44607d9",
		"name": "ESC Ticket microservice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Ticket",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7adca5ff-e8ed-4b2d-8a2f-103d5b0f1189",
						"exec": [
							"pm.environment.set(\"ticketId\", \"1\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/ticket/{{ticketId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ticket",
						"{{ticketId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Ticket with Attachment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7adca5ff-e8ed-4b2d-8a2f-103d5b0f1189",
						"exec": [
							"pm.environment.set(\"ticketId\", \"1\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-Parse-Session-Token",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{baseUrl}}/ticket/{{ticketId}}/attachment",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ticket",
						"{{ticketId}}",
						"attachment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Ticket",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7adca5ff-e8ed-4b2d-8a2f-103d5b0f1189",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"Yet another pointless ticket\",\n\t\"message\": \"I am getting a widgetization error when I attempt to confound the heterozygote\",\n\t\"priority\": 4,\n\t\"severity\": 4\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/ticket",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ticket"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Ticket by User Token",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/ticket/byUser",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ticket",
						"byUser"
					]
				},
				"description": "List all tickets opened by the current user."
			},
			"response": []
		},
		{
			"name": "Get Version",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/version",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"version"
					]
				},
				"description": "Get the git commit hash for the current deployment of the service."
			},
			"response": []
		},
		{
			"name": "Create User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"dummy_user\",\n\t\"password\": \"Password1!\",\n\t\"long_name\": \"Dummy User\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				},
				"description": "Creating an existing user will fail!"
			},
			"response": []
		},
		{
			"name": "Login",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"dummy_user\",\n\t\"password\": \"Password1!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Current User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"me"
					]
				},
				"description": "Use the current session token to retrieve the current user profile."
			},
			"response": []
		},
		{
			"name": "Promote User to Admin",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0739daad-27d8-47f6-bd7c-ad30749033c1",
						"exec": [
							"pm.environment.set(\"userIdent\", \"nikos\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Parse-Session-Token",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{userIdent}}/promoteToAdmin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{userIdent}}",
						"promoteToAdmin"
					]
				},
				"description": "User holding the session token must be an admin. In other words, only an admin can promote other users to admin status.\nThe promotion is idempotent. userIdent can be either an all-digit string, in which case the ident is treated as an user id, or a mixed alnum/underscore string, in which case the ident is treated as a username."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6c1be67c-00cd-47ca-b3d6-d392c4cc770a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5bd2801d-a036-4a09-bf31-943cb164af54",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "d27780d1-04e2-462c-a2d6-014e5a40f34b",
			"key": "baseUrl",
			"value": "https://esc-ticket-service.lepak.sg",
			"type": "string"
		}
	]
}